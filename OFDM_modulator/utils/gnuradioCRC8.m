function crc8 = gnuradioCRC8(bytes)

%
%   Reconstruct for something like this later.
%
%     crcgen = comm.CRCGenerator( ...
%         'Polynomial', [1 1 1], ... 
%         'InitialConditions', [1 1 1 1 1 1 1 1], ...
%         'FinalXOR', [0 0 0 0 0 0 0 0], ...
%         'ReflectInputBytes', false, ...
%         'ReflectChecksums', false ...
%     );
%     crc8 = step(crcgen, bytes);

    crcTable = [ ...
        uint8(hex2dec('00')) uint8(hex2dec('07')) uint8(hex2dec('0E')) uint8(hex2dec('09')) uint8(hex2dec('1C')) uint8(hex2dec('1B')) uint8(hex2dec('12')) uint8(hex2dec('15')) uint8(hex2dec('38')) uint8(hex2dec('3F')) uint8(hex2dec('36')) uint8(hex2dec('31')) uint8(hex2dec('24')) uint8(hex2dec('23')) uint8(hex2dec('2A')) uint8(hex2dec('2D')) ...
        uint8(hex2dec('70')) uint8(hex2dec('77')) uint8(hex2dec('7E')) uint8(hex2dec('79')) uint8(hex2dec('6C')) uint8(hex2dec('6B')) uint8(hex2dec('62')) uint8(hex2dec('65')) uint8(hex2dec('48')) uint8(hex2dec('4F')) uint8(hex2dec('46')) uint8(hex2dec('41')) uint8(hex2dec('54')) uint8(hex2dec('53')) uint8(hex2dec('5A')) uint8(hex2dec('5D')) ...
        uint8(hex2dec('E0')) uint8(hex2dec('E7')) uint8(hex2dec('EE')) uint8(hex2dec('E9')) uint8(hex2dec('FC')) uint8(hex2dec('FB')) uint8(hex2dec('F2')) uint8(hex2dec('F5')) uint8(hex2dec('D8')) uint8(hex2dec('DF')) uint8(hex2dec('D6')) uint8(hex2dec('D1')) uint8(hex2dec('C4')) uint8(hex2dec('C3')) uint8(hex2dec('CA')) uint8(hex2dec('CD')) ...
        uint8(hex2dec('90')) uint8(hex2dec('97')) uint8(hex2dec('9E')) uint8(hex2dec('99')) uint8(hex2dec('8C')) uint8(hex2dec('8B')) uint8(hex2dec('82')) uint8(hex2dec('85')) uint8(hex2dec('A8')) uint8(hex2dec('AF')) uint8(hex2dec('A6')) uint8(hex2dec('A1')) uint8(hex2dec('B4')) uint8(hex2dec('B3')) uint8(hex2dec('BA')) uint8(hex2dec('BD')) ...
        uint8(hex2dec('C7')) uint8(hex2dec('C0')) uint8(hex2dec('C9')) uint8(hex2dec('CE')) uint8(hex2dec('DB')) uint8(hex2dec('DC')) uint8(hex2dec('D5')) uint8(hex2dec('D2')) uint8(hex2dec('FF')) uint8(hex2dec('F8')) uint8(hex2dec('F1')) uint8(hex2dec('F6')) uint8(hex2dec('E3')) uint8(hex2dec('E4')) uint8(hex2dec('ED')) uint8(hex2dec('EA')) ...
        uint8(hex2dec('B7')) uint8(hex2dec('B0')) uint8(hex2dec('B9')) uint8(hex2dec('BE')) uint8(hex2dec('AB')) uint8(hex2dec('AC')) uint8(hex2dec('A5')) uint8(hex2dec('A2')) uint8(hex2dec('8F')) uint8(hex2dec('88')) uint8(hex2dec('81')) uint8(hex2dec('86')) uint8(hex2dec('93')) uint8(hex2dec('94')) uint8(hex2dec('9D')) uint8(hex2dec('9A')) ...
        uint8(hex2dec('27')) uint8(hex2dec('20')) uint8(hex2dec('29')) uint8(hex2dec('2E')) uint8(hex2dec('3B')) uint8(hex2dec('3C')) uint8(hex2dec('35')) uint8(hex2dec('32')) uint8(hex2dec('1F')) uint8(hex2dec('18')) uint8(hex2dec('11')) uint8(hex2dec('16')) uint8(hex2dec('03')) uint8(hex2dec('04')) uint8(hex2dec('0D')) uint8(hex2dec('0A')) ...
        uint8(hex2dec('57')) uint8(hex2dec('50')) uint8(hex2dec('59')) uint8(hex2dec('5E')) uint8(hex2dec('4B')) uint8(hex2dec('4C')) uint8(hex2dec('45')) uint8(hex2dec('42')) uint8(hex2dec('6F')) uint8(hex2dec('68')) uint8(hex2dec('61')) uint8(hex2dec('66')) uint8(hex2dec('73')) uint8(hex2dec('74')) uint8(hex2dec('7D')) uint8(hex2dec('7A')) ...
        uint8(hex2dec('89')) uint8(hex2dec('8E')) uint8(hex2dec('87')) uint8(hex2dec('80')) uint8(hex2dec('95')) uint8(hex2dec('92')) uint8(hex2dec('9B')) uint8(hex2dec('9C')) uint8(hex2dec('B1')) uint8(hex2dec('B6')) uint8(hex2dec('BF')) uint8(hex2dec('B8')) uint8(hex2dec('AD')) uint8(hex2dec('AA')) uint8(hex2dec('A3')) uint8(hex2dec('A4')) ...
        uint8(hex2dec('F9')) uint8(hex2dec('FE')) uint8(hex2dec('F7')) uint8(hex2dec('F0')) uint8(hex2dec('E5')) uint8(hex2dec('E2')) uint8(hex2dec('EB')) uint8(hex2dec('EC')) uint8(hex2dec('C1')) uint8(hex2dec('C6')) uint8(hex2dec('CF')) uint8(hex2dec('C8')) uint8(hex2dec('DD')) uint8(hex2dec('DA')) uint8(hex2dec('D3')) uint8(hex2dec('D4')) ...
        uint8(hex2dec('69')) uint8(hex2dec('6E')) uint8(hex2dec('67')) uint8(hex2dec('60')) uint8(hex2dec('75')) uint8(hex2dec('72')) uint8(hex2dec('7B')) uint8(hex2dec('7C')) uint8(hex2dec('51')) uint8(hex2dec('56')) uint8(hex2dec('5F')) uint8(hex2dec('58')) uint8(hex2dec('4D')) uint8(hex2dec('4A')) uint8(hex2dec('43')) uint8(hex2dec('44')) ...
        uint8(hex2dec('19')) uint8(hex2dec('1E')) uint8(hex2dec('17')) uint8(hex2dec('10')) uint8(hex2dec('05')) uint8(hex2dec('02')) uint8(hex2dec('0B')) uint8(hex2dec('0C')) uint8(hex2dec('21')) uint8(hex2dec('26')) uint8(hex2dec('2F')) uint8(hex2dec('28')) uint8(hex2dec('3D')) uint8(hex2dec('3A')) uint8(hex2dec('33')) uint8(hex2dec('34')) ...
        uint8(hex2dec('4E')) uint8(hex2dec('49')) uint8(hex2dec('40')) uint8(hex2dec('47')) uint8(hex2dec('52')) uint8(hex2dec('55')) uint8(hex2dec('5C')) uint8(hex2dec('5B')) uint8(hex2dec('76')) uint8(hex2dec('71')) uint8(hex2dec('78')) uint8(hex2dec('7F')) uint8(hex2dec('6A')) uint8(hex2dec('6D')) uint8(hex2dec('64')) uint8(hex2dec('63')) ...
        uint8(hex2dec('3E')) uint8(hex2dec('39')) uint8(hex2dec('30')) uint8(hex2dec('37')) uint8(hex2dec('22')) uint8(hex2dec('25')) uint8(hex2dec('2C')) uint8(hex2dec('2B')) uint8(hex2dec('06')) uint8(hex2dec('01')) uint8(hex2dec('08')) uint8(hex2dec('0F')) uint8(hex2dec('1A')) uint8(hex2dec('1D')) uint8(hex2dec('14')) uint8(hex2dec('13')) ...
        uint8(hex2dec('AE')) uint8(hex2dec('A9')) uint8(hex2dec('A0')) uint8(hex2dec('A7')) uint8(hex2dec('B2')) uint8(hex2dec('B5')) uint8(hex2dec('BC')) uint8(hex2dec('BB')) uint8(hex2dec('96')) uint8(hex2dec('91')) uint8(hex2dec('98')) uint8(hex2dec('9F')) uint8(hex2dec('8A')) uint8(hex2dec('8D')) uint8(hex2dec('84')) uint8(hex2dec('83')) ...
        uint8(hex2dec('DE')) uint8(hex2dec('D9')) uint8(hex2dec('D0')) uint8(hex2dec('D7')) uint8(hex2dec('C2')) uint8(hex2dec('C5')) uint8(hex2dec('CC')) uint8(hex2dec('CB')) uint8(hex2dec('E6')) uint8(hex2dec('E1')) uint8(hex2dec('E8')) uint8(hex2dec('EF')) uint8(hex2dec('FA')) uint8(hex2dec('FD')) uint8(hex2dec('F4')) uint8(hex2dec('F3')) ...
    ];

    crc8 = uint8(255);        %initial value 'FF'

%     NO INPUT REVERSE
%     for i = 1:1:length(bytes)
%         bytes(i) = reversePaddedDecNumBits(bytes(i),8);
%     end

    for i = 1:1:length(bytes)
        pos = bitxor(uint8(bytes(i)), crc8) + 1;   %matlab arrays from 1, that's why plus 1
        crc8 = crcTable(pos);
    end
    
%     NO OUTPUT REVERSE
%     crc = reversePaddedDecNumBits(crc,8);    

%     dec2hex(crc8)    %MSB is on the right side
end
